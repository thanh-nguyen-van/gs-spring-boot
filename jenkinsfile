#!/usr/bin/env groovy
@Library('jenkins-shared-library') _

pipeline {
    agent any

    tools {
        nodejs 'nodejs_10.15.3'
    }

    stages {
        stage('Generate node_modules') {
            steps {
                // Remove old node_module
                sh 'rm -rf node_modules'
                // Generate node_modules
                sh 'yarn'
                sh 'yarn test-with-coverage'

            }
        }
        stage('Deloying PEN OR DEMO OR PROD Environment') {
            when {
                expression { params.env == 'stg' || params.env == 'prod' || params.env == 'pro' }
            }
            steps {
                script {
                    sh '''
                    '''
                }
            }
        }
        stage('Migrate DB') {
            steps {
                script {
                    sh '''
                      cd complete & ./mvnw spring-boot:run
                    '''
                }
            }
        }
    }
     post {
         always {
             /* Use slackNotifier.groovy from shared library and provide current build result as parameter */
              notifyBuild(currentBuild.result)
         }
     }
}

def notifyBuild(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus = buildStatus ?: 'SUCCESS'

    // Default values
    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
    def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
     <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""

    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }

    // Send notifications
    slackSend(color: colorCode, message: summary)
}
